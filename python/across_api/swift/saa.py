# Copyright Â© 2023 United States Government as represented by the
# Administrator of the National Aeronautics and Space Administration.
# All Rights Reserved.

from datetime import datetime
from typing import Optional

from shapely.geometry import Point, Polygon  # type: ignore

from ..base.config import set_observatory
from ..base.saa import SAABase, SAAGetSchema, SAAPolygonBase, SAASchema
from .config import SWIFT
from .ephem import Ephem


class SwiftSAAPolygon(SAAPolygonBase):
    """Class to define the Swift SAA polygon.

    Attributes
    ----------
    points : list
        List of points defining the SAA polygon.
    saapoly : Polygon
        Shapely Polygon object defining the SAA polygon.
    bat_points : list
        List of points defining the BAT SAA polygon.
    bat_saapoly : Polygon
        Shapely Polygon object defining the BAT SAA polygon.
    """

    def __init__(self):
        # Spacecraft SAA polygon
        points = [
            (39.0, -30.0),
            (36.0, -26.0),
            (28.0, -21.0),
            (6.0, -12.0),
            (-5.0, -6.0),
            (-21.0, 2.0),
            (-30.0, 3.0),
            (-45.0, 2.0),
            (-60.0, -2.0),
            (-75.0, -7.0),
            (-83.0, -10.0),
            (-87.0, -16.0),
            (-86.0, -23.0),
            (-83.0, -30.0),
        ]
        self.saapoly = Polygon(points)

        # BAT SAA polygon
        bat_points = [
            [-8.50000000e01, -1.99999935e01],
            [-8.49999999e01, -21.5],
            [-8.40000000e01, -21.5],
            [-8.30000000e01, -21.5],
            [-8.20000000e01, -21.5],
            [-8.10000000e01, -21.5],
            [-8.00000000e01, -21.5],
            [-7.90000000e01, -21.5],
            [-7.80000000e01, -21.5],
            [-7.70000000e01, -21.5],
            [-7.60000000e01, -21.5],
            [-7.50000000e01, -21.5],
            [-7.40000000e01, -21.5],
            [-7.30000000e01, -21.5],
            [-7.20000000e01, -21.5],
            [-7.10000000e01, -21.5],
            [-7.00000000e01, -21.5],
            [-6.90000000e01, -21.5],
            [-6.80000000e01, -21.5],
            [-6.70000000e01, -21.5],
            [-6.60000000e01, -21.5],
            [-6.50000000e01, -21.5],
            [-6.40000000e01, -21.5],
            [-6.30000000e01, -21.5],
            [-6.20000000e01, -21.5],
            [-6.10000000e01, -21.5],
            [-6.00000000e01, -21.5],
            [-5.90000000e01, -21.5],
            [-5.80000000e01, -21.5],
            [-5.70000000e01, -21.5],
            [-5.60000000e01, -21.5],
            [-5.50000000e01, -21.5],
            [-5.40000000e01, -21.5],
            [-5.30000000e01, -21.5],
            [-5.20000000e01, -21.5],
            [-5.10000000e01, -21.5],
            [-5.00000000e01, -21.5],
            [-4.90000000e01, -21.5],
            [-4.80000000e01, -21.5],
            [-4.70000000e01, -21.5],
            [-4.60000000e01, -21.5],
            [-4.50000000e01, -21.5],
            [-4.40000000e01, -21.5],
            [-4.30000000e01, -21.5],
            [-4.20000000e01, -21.5],
            [-4.10000000e01, -21.5],
            [-4.00000000e01, -21.5],
            [-3.90000000e01, -21.5],
            [-3.80000000e01, -21.5],
            [-3.70000000e01, -21.5],
            [-3.60000000e01, -21.5],
            [-3.50000000e01, -21.5],
            [-3.40000000e01, -21.5],
            [-3.30000000e01, -21.5],
            [-3.20000000e01, -21.5],
            [-3.10000000e01, -21.5],
            [-3.00000000e01, -21.5],
            [-2.90000000e01, -21.5],
            [-2.80000000e01, -21.5],
            [-2.70000000e01, -21.5],
            [-2.60000000e01, -21.5],
            [-2.50000000e01, -21.5],
            [-2.40000000e01, -21.5],
            [-2.30000000e01, -21.5],
            [-2.20000000e01, -21.5],
            [-2.10000000e01, -21.5],
            [-21.5, -21.5],
            [-1.90000000e01, -21.5],
            [-1.80000000e01, -21.5],
            [-1.70000000e01, -21.5],
            [-1.60000000e01, -21.5],
            [-1.50000000e01, -21.5],
            [-1.40000000e01, -21.5],
            [-1.30000000e01, -21.5],
            [-1.20000000e01, -21.5],
            [-1.10000000e01, -21.5],
            [-1.00000000e01, -21.5],
            [-9.00000000e00, -21.5],
            [-8.00000000e00, -21.5],
            [-7.00000000e00, -21.5],
            [-6.00000000e00, -21.5],
            [-5.00000000e00, -21.5],
            [-4.00000000e00, -21.5],
            [-3.00000000e00, -21.5],
            [-2.00000000e00, -21.5],
            [-1.00000000e00, -21.5],
            [-4.15588488e-08, -1.90000000e01],
            [-3.35000038e-07, -1.90000000e01],
            [-1.00000000e00, -1.80000003e01],
            [-2.00000000e00, -1.80000001e01],
            [-3.00000000e00, -1.80000000e01],
            [-4.00000000e00, -1.80000000e01],
            [-5.00000000e00, -1.80000000e01],
            [-5.00000058e00, -1.80000000e01],
            [-6.00000000e00, -1.70000006e01],
            [-7.00000000e00, -1.70000001e01],
            [-7.00000030e00, -1.70000000e01],
            [-8.00000000e00, -1.60000003e01],
            [-9.00000000e00, -1.60000001e01],
            [-1.00000000e01, -1.60000000e01],
            [-1.00000005e01, -1.60000000e01],
            [-1.10000000e01, -1.50000005e01],
            [-1.20000000e01, -1.50000000e01],
            [-1.30000000e01, -1.50000000e01],
            [-1.30000000e01, -1.50000000e01],
            [-1.40000000e01, -1.40000000e01],
            [-1.40000001e01, -1.40000000e01],
            [-1.50000000e01, -1.30000001e01],
            [-1.60000000e01, -1.30000000e01],
            [-1.70000000e01, -1.30000000e01],
            [-1.70000000e01, -1.30000000e01],
            [-1.80000000e01, -1.20000000e01],
            [-1.90000000e01, -1.20000000e01],
            [-1.90000000e01, -1.20000000e01],
            [-1.90000000e01, -1.19999999e01],
            [-1.80000001e01, -1.10000000e01],
            [-1.80000000e01, -1.10000000e01],
            [-1.70000000e01, -1.00000000e01],
            [-1.70000001e01, -9.00000000e00],
            [-1.80000000e01, -8.00000013e00],
            [-1.90000000e01, -8.00000002e00],
            [-1.90000001e01, -8.00000000e00],
            [-21.5, -7.00000014e00],
            [-2.10000000e01, -7.00000003e00],
            [-2.20000000e01, -7.00000001e00],
            [-2.20000000e01, -7.00000000e00],
            [-2.30000000e01, -6.00000003e00],
            [-2.40000000e01, -6.00000001e00],
            [-2.50000000e01, -6.00000000e00],
            [-2.50000000e01, -6.00000000e00],
            [-2.60000000e01, -5.00000002e00],
            [-2.70000000e01, -5.00000001e00],
            [-2.70000000e01, -5.00000000e00],
            [-2.80000000e01, -4.00000004e00],
            [-2.80000000e01, -4.00000000e00],
            [-2.90000000e01, -3.00000003e00],
            [-3.00000000e01, -3.00000002e00],
            [-3.00000000e01, -3.00000000e00],
            [-3.00000003e01, -2.00000000e00],
            [-3.10000000e01, -1.00000032e00],
            [-3.10000003e01, -1.00000000e00],
            [-3.20000000e01, -2.79999995e-07],
            [-3.30000000e01, -4.84444485e-08],
            [-3.40000000e01, -1.17647119e-08],
            [-3.50000000e01, -1.62000049e-08],
            [-3.50000001e01, 0.00000000e00],
            [-3.60000000e01, 9.99999907e-01],
            [-3.70000000e01, 9.99999984e-01],
            [-3.80000000e01, 9.99999988e-01],
            [-3.90000000e01, 9.99999888e-01],
            [-4.00000000e01, 9.99999982e-01],
            [-4.10000000e01, 9.99999993e-01],
            [-4.20000000e01, 9.99999995e-01],
            [-4.30000000e01, 9.99999995e-01],
            [-4.40000000e01, 9.99999993e-01],
            [-4.50000000e01, 9.99999987e-01],
            [-4.60000000e01, 9.99999990e-01],
            [-4.70000000e01, 9.99999993e-01],
            [-4.80000000e01, 9.99999995e-01],
            [-4.90000000e01, 9.99999994e-01],
            [-5.00000000e01, 9.99999994e-01],
            [-5.10000000e01, 9.99999977e-01],
            [-5.20000000e01, 9.99999900e-01],
            [-5.30000000e01, 9.99999943e-01],
            [-5.40000000e01, 9.99999969e-01],
            [-5.50000000e01, 9.99999854e-01],
            [-5.60000000e01, 9.99999867e-01],
            [-5.69999999e01, 0.00000000e00],
            [-5.70000000e01, -7.33845695e-09],
            [-5.80000000e01, -1.05333271e-08],
            [-5.90000000e01, -1.47777826e-08],
            [-5.90000007e01, 0.00000000e00],
            [-6.00000000e01, 9.99999315e-01],
            [-6.10000000e01, 9.99999901e-01],
            [-6.19999999e01, 0.00000000e00],
            [-6.20000000e01, -2.48888909e-08],
            [-6.30000000e01, -4.80000040e-08],
            [-6.40000000e01, -1.93000005e-07],
            [-6.49999998e01, -1.00000000e00],
            [-6.50000000e01, -1.00000002e00],
            [-6.60000000e01, -1.00000004e00],
            [-6.70000000e01, -2.00000000e00],
            [-6.70000000e01, -2.00000001e00],
            [-6.80000000e01, -2.00000002e00],
            [-6.90000000e01, -2.00000011e00],
            [-6.99999999e01, -3.00000000e00],
            [-7.00000000e01, -3.00000002e00],
            [-7.10000000e01, -3.00000007e00],
            [-7.19999999e01, -4.00000000e00],
            [-7.20000000e01, -4.00000001e00],
            [-7.30000000e01, -4.00000003e00],
            [-7.40000000e01, -4.00000021e00],
            [-7.49999998e01, -5.00000000e00],
            [-7.50000000e01, -5.00000002e00],
            [-7.60000000e01, -6.00000000e00],
            [-7.60000000e01, -6.00000002e00],
            [-7.70000000e01, -6.00000025e00],
            [-7.79999998e01, -7.00000000e00],
            [-7.80000000e01, -7.00000012e00],
            [-7.89999999e01, -8.00000000e00],
            [-7.90000000e01, -8.00000001e00],
            [-8.00000000e01, -8.00000005e00],
            [-8.10000000e01, -9.00000000e00],
            [-8.10000000e01, -9.00000002e00],
            [-8.20000000e01, -1.00000000e01],
            [-8.20000000e01, -1.10000000e01],
            [-8.20000000e01, -1.10000000e01],
            [-8.30000000e01, -1.10000002e01],
            [-8.39999998e01, -1.20000000e01],
            [-8.40000000e01, -1.30000000e01],
            [-8.40000000e01, -1.30000001e01],
            [-8.49999999e01, -1.40000000e01],
            [-8.50000000e01, -1.50000000e01],
            [-8.50000000e01, -1.50000004e01],
            [-8.59999996e01, -1.60000000e01],
            [-8.59999993e01, -1.70000000e01],
            [-8.59999999e01, -1.80000000e01],
            [-8.59999935e01, -1.90000000e01],
            [-8.50000000e01, -20],
            [-8.50000000e01, -21.5],
        ]

        self.bat_saapoly = Polygon(bat_points)

    def insaa(self, lat, lon, bat=False):
        if bat:
            saa = self.bat_saapoly
        else:
            saa = self.saapoly
        return saa.contains(Point(lat, lon))


@set_observatory(SWIFT)
class SwiftSAA(SAABase):
    """Class to calculate Swift SAA entries.

    Parameters
    ----------
    begin : datetime
        Start time of SAA search
    end : datetime
        End time of SAA search
    ephem : Optional[Ephem]
        Ephem object to use for SAA calculations
    stepsize : int
        Step size in seconds for SAA calculations

    Attributes
    ----------
    entries : list
        List of SAA entries
    status : JobInfo
        Info about SAA query
    """

    _schema = SAASchema
    _get_schema = SAAGetSchema

    # Internal things
    saa = SwiftSAAPolygon()
    ephem: Ephem
    begin: datetime
    end: datetime
    stepsize: int

    def __init__(
        self,
        begin: datetime,
        end: datetime,
        ephem: Optional[Ephem] = None,
        stepsize: int = 60,
    ):
        # Attributes

        self._insaacons: Optional[list] = None
        self.entries = None

        # Parameters
        self.begin = begin
        self.end = end
        if ephem is None:
            self.ephem = Ephem(begin=begin, end=end, stepsize=stepsize)
            self.stepsize = stepsize
        else:
            self.ephem = ephem
            # Make sure stepsize matches supplied ephemeris
            self.stepsize = ephem.stepsize

        # Run GET automatically if parameters are valid, this is a GET only API
        if self.validate_get():
            self.get()

    @classmethod
    def insaa(cls, dttime: datetime) -> bool:
        """
        For a given datetime, are we in the SAA?

        Parameters
        ----------
        dttime : datetime
            Time at which to calculate if we're in SAA

        Returns
        -------
        bool
            True if we're in the SAA, False otherwise
        """
        # Calculate an ephemeris for the exact time requested
        ephem = Ephem(begin=dttime, end=dttime)  # type: ignore
        return cls.saa.insaa(ephem.longitude[0], ephem.latitude[0])


# Class alias
SAA = SwiftSAA
